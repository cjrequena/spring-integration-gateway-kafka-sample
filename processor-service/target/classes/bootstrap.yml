
server.servlet.context-path: / # Context path of the application.
server.port: ${SERVER_PORT:8010} # Server HTTP port.

---
spring:
  application:
    name: proceror-service
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:local}
  cloud:
    consul:
      host: ${SPRING_CLOUD_CONSUL_HOST:localhost}
      port: ${SPRING_CLOUD_CONSUL_PORT:8500}
      enabled: ${SPRING_CLOUD_CONSUL_ENABLED:false}
      discovery:
        # Service name
        serviceName: ${spring.application.name}
        # Unique service instance id
        instanceId: ${spring.application.name}
        # Is service discovery enabled?
        enabled: ${SPRING_CLOUD_CONSUL_DISCOVERY_ENABLED:false}
        # Register as a service in consul.
        register: ${SPRING_CLOUD_CONSUL_DISCOVERY_REGISTER:false}
        # Register health check in consul. Useful during development of a service.
        registerHealthCheck: ${SPRING_CLOUD_CONSUL_DISCOVERY_REGISTERHEALTHCHECK:false}
        # Alternate server path to invoke for health checking
        healthCheckPath: /management/healthcheck
        # Custom health check url to override default
        #healthCheckUrl: ${SPRING_CLOUD_CONSUL_DISCOVERY_HEALTHCHECKURL}
        # How often to perform the health check (e.g. 10s), defaults to 10s.
        healthCheckInterval: ${SPRING_CLOUD_CONSUL_DISCOVERY_HEALTHCHECKINTERVAL:15s}
        # Timeout for health check (e.g. 10s).
        healthCheckTimeout: ${SPRING_CLOUD_CONSUL_DISCOVERY_HEALTHCHECKTIMEOUT:15s}
        # Timeout to deregister services critical for longer than timeout (e.g. 30m).
        healthCheckCriticalTimeout: ${SPRING_CLOUD_CONSUL_DISCOVERY_HEALTHCHECKCRITICALTIMEOUT:10m}
        # Tags to use when registering service
        tags: project_name=processor-service, version=1.0-SNAPSHOT, commit_id=${git.commit.id}, commit_time=${git.commit.time}, profiles_active=${spring.profiles.active}
        # Use ip address rather than hostname during registration
        prefer-ip-address: ${SPRING_CLOUD_CONSUL_DISCOVERY_PREFER_IP_ADDRESS:false}
        # IP address to use when accessing service (must also set preferIpAddress to use)
        ipAddress: ${SPRING_CLOUD_CONSUL_DISCOVERY_IPADDRESS:localhost}
    config:
      # Flag to say that remote configuration is enabled. (default false).
      enabled: ${SPRING_CLOUD_CONFIG_ENABLED:false}
      # Flag to indicate that failure to connect to the server is fatal (default false).
      failFast: ${SPRING_CLOUD_CONFIG_FAILFAST:false}
      discovery:
        # Flag to indicate that config server discovery is enabled (config server URL will be looked up via discovery). (default false).
        enabled: ${SPRING_CLOUD_CONFIG_DISCOVERY_ENABLED:false}
        # Service id to locate config server.
        serviceId: ${SPRING_CLOUD_CONFIG_DISCOVERY_SERVICEID:config-server}
    inetutils:
      ignored-interfaces:
        - vbox*
        - bridge*
        - docker0
        - veth.*
        - lo*
      preferredNetworks:
        - 192.168
        - 10.0
